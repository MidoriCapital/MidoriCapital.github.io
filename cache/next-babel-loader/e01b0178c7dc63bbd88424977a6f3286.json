{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { LabelSeries, Sunburst } from 'react-vis';\nimport { useEffect, useState } from 'react';\nvar tree = {\n  \"title\": \"\",\n  \"color\": \"#000000\",\n  \"children\": [{\n    \"title\": \"Short Term\",\n    \"color\": '#234F1E',\n    \"sizeLabel\": '20%',\n    \"children\": [{\n      \"title\": \"Commodities\",\n      \"color\": \"#FF00FF\",\n      \"sizeLabel\": '10%',\n      children: [{\n        \"title\": \"Gold\",\n        \"color\": \"#FFD700\",\n        \"sizeLabel\": '5%',\n        size: 10\n      }, {\n        \"title\": \"Natural Gas\",\n        \"color\": \"#ffa500\",\n        \"sizeLabel\": '5%',\n        size: 10\n      }]\n    }, {\n      \"title\": \"Indexes\",\n      \"color\": \"#008000\",\n      \"size\": 10,\n      \"sizeLabel\": '5%'\n    }, {\n      \"title\": \"Earning Reports\",\n      \"color\": \"#3DED97\",\n      \"size\": 10,\n      \"sizeLabel\": '5%'\n    }]\n  }, {\n    \"title\": \"Long Term\",\n    \"color\": '#00f3f7',\n    \"sizeLabel\": '80%',\n    \"children\": [{\n      \"title\": \"Other\",\n      \"color\": \"#1231A0\",\n      sizeLabel: '20%',\n      children: [{\n        \"title\": \"Finance\",\n        \"color\": \"#427aa8\",\n        \"size\": 10,\n        \"sizeLabel\": '5%'\n      }, {\n        \"title\": \"Travel\",\n        \"color\": \"#05599e\",\n        \"size\": 10,\n        \"sizeLabel\": '5%'\n      }]\n    }, {\n      \"title\": \"ETFs\",\n      \"color\": \"#84bff0\",\n      \"size\": 40,\n      \"sizeLabel\": '20%'\n    }, {\n      \"title\": \"REITs\",\n      \"color\": \"#3895D3\",\n      \"size\": 40,\n      \"sizeLabel\": '20%'\n    }, {\n      \"title\": \"Technology\",\n      \"color\": \"#58CCED\",\n      \"size\": 20,\n      \"sizeLabel\": '20%'\n    }]\n  }]\n};\n\nfunction flipTree() {\n  var tree = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var nextPath = path.concat(tree.title);\n  return (tree.children || []).map(function (x) {\n    return flipTree(x, nextPath);\n  }).reduce(function (a, b) {\n    return _objectSpread(_objectSpread({}, a), b);\n  }, tree.title ? _defineProperty({}, tree.title, _objectSpread(_objectSpread({}, tree), {}, {\n    path: new Set(nextPath)\n  })) : {});\n}\n\nvar flippedTree = flipTree(tree);\nvar groups = Object.keys(flippedTree);\nexport function Strategy() {\n  var _useState = useState(false),\n      isHovering = _useState[0],\n      setHovering = _useState[1];\n\n  var _useState2 = useState('Finance'),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var colorShade = function colorShade(col, amt) {\n    col = col.replace(/^#/, '');\n    if (col.length === 3) col = col[0] + col[0] + col[1] + col[1] + col[2] + col[2];\n\n    var _col$match = col.match(/.{2}/g),\n        _col$match2 = _slicedToArray(_col$match, 3),\n        r = _col$match2[0],\n        g = _col$match2[1],\n        b = _col$match2[2];\n\n    var _ref2 = [parseInt(r, 16) + amt, parseInt(g, 16) + amt, parseInt(b, 16) + amt];\n    r = _ref2[0];\n    g = _ref2[1];\n    b = _ref2[2];\n    r = Math.max(Math.min(255, r), 0).toString(16);\n    g = Math.max(Math.min(255, g), 0).toString(16);\n    b = Math.max(Math.min(255, b), 0).toString(16);\n    var rr = (r.length < 2 ? '0' : '') + r;\n    var gg = (g.length < 2 ? '0' : '') + g;\n    var bb = (b.length < 2 ? '0' : '') + b;\n    return \"#\".concat(rr).concat(gg).concat(bb);\n  };\n\n  var withHighlight = function withHighlight(nodesToHighlight, tree) {\n    return _objectSpread(_objectSpread({}, tree), {}, {\n      color: nodesToHighlight.has(tree.title) ? colorShade(tree.color, -50) : tree.color,\n      children: (tree.children || []).map(function (x) {\n        return withHighlight(nodesToHighlight, x);\n      })\n    });\n  };\n\n  var data = withHighlight(flippedTree[selected || 'Long Term'].path, tree);\n  var labelStyle = {\n    fontSize: '20px',\n    textAnchor: 'middle'\n  };\n  useEffect(function () {\n    if (isHovering) {\n      return;\n    }\n\n    var next = groups[(groups.indexOf(selected) + 1) % groups.length];\n    var handle = setTimeout(function () {\n      return setSelected(next);\n    }, 2000);\n    return function () {\n      return window.clearTimeout(handle);\n    };\n  }, [isHovering, selected]);\n\n  var Keyword = function Keyword(_ref3) {\n    var word = _ref3.word,\n        text = _ref3.text;\n    return __jsx(\"b\", {\n      style: {\n        borderBottom: selected == word ? \"2px solid \".concat(flippedTree[word].color) : 'none',\n        color: flippedTree[word].color,\n        margin: \"5px\"\n      },\n      onMouseLeave: function onMouseLeave() {\n        return setHovering(false);\n      },\n      onMouseEnter: function onMouseEnter() {\n        setHovering(true);\n        setSelected(word);\n      }\n    }, text);\n  };\n\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      background: 'white',\n      padding: '5em',\n      transform: \"rotate(2deg)\",\n      width: '120%',\n      position: 'relative',\n      left: '-5%',\n      top: '-5%'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      transform: \"rotate(-2deg)\",\n      width: '80%',\n      color: 'black'\n    }\n  }, __jsx(\"h1\", null, \"Investment Strategy\"), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'stretch',\n      alignContent: 'stretch',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      flex: 1\n    }\n  }, __jsx(Sunburst, {\n    hideRootNode: true,\n    colorType: \"literal\",\n    data: data,\n    width: 350,\n    height: 350,\n    onValueMouseOut: function onValueMouseOut() {\n      setHovering(false);\n    },\n    onValueMouseOver: function onValueMouseOver(node) {\n      setSelected(node.title);\n      setHovering(true);\n    }\n  }, __jsx(LabelSeries, {\n    data: [{\n      x: 0,\n      y: 0,\n      label: selected,\n      style: labelStyle\n    }, {\n      x: 0,\n      y: -22,\n      label: flippedTree[selected].sizeLabel\n    }]\n  })), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'stretch',\n      alignContent: 'stretch',\n      flex: 1\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'block',\n      borderRadius: '5px',\n      background: '#eee',\n      border: \"1px solid \".concat(flippedTree['Long Term'].color),\n      padding: '1em',\n      margin: '1em',\n      height: '50%',\n      minWidth: '300px'\n    }\n  }, __jsx(\"h2\", null, \"80% \", __jsx(Keyword, {\n    word: \"Long Term\",\n    text: \"Long Term\"\n  })), __jsx(\"div\", null, \"We believe in the general uptrend of the economy and hence invest in a variety of\", __jsx(Keyword, {\n    word: \"ETFs\",\n    text: \"ETFs,\"\n  }), __jsx(Keyword, {\n    word: \"REITs\",\n    text: \"REITs,\"\n  }), __jsx(Keyword, {\n    word: \"Technology\",\n    text: \"Technology\"\n  }), \" and\", __jsx(Keyword, {\n    word: \"Finance\",\n    text: \"Finance\"\n  }), \" stock to benefit from growth and dividends.\")), __jsx(\"div\", {\n    style: {\n      display: 'block',\n      borderRadius: '5px',\n      background: '#eee',\n      border: \"1px solid \".concat(flippedTree['Short Term'].color),\n      padding: '1em',\n      margin: '1em',\n      height: '50%',\n      minWidth: '300px'\n    }\n  }, __jsx(\"h2\", null, \"20% \", __jsx(Keyword, {\n    word: \"Short Term\",\n    text: \"Short Term\"\n  })), __jsx(\"div\", null, \"Catastrophes, Politics, and \", __jsx(Keyword, {\n    word: \"Earning Reports\",\n    text: \"Earning Reports\"\n  }), \" have huge impact on the volatility of the market. We keep track of a selection Companies, \", __jsx(Keyword, {\n    word: \"Indexes\",\n    text: \"Indexes\"\n  }), \" and \", __jsx(Keyword, {\n    word: \"Commodities\",\n    text: \"Commodities\"\n  }), \" like \", __jsx(Keyword, {\n    word: \"Gold\",\n    text: \"Gold\"\n  }), \" and \", __jsx(Keyword, {\n    word: \"Natural Gas\",\n    text: \"Natural Gas\"\n  }), \"to invest in unique opportunities. We do this either directly or indirectly by copy trading domain-experts - a unique feature of \", __jsx(\"a\", {\n    href: \"hhttps://etoro.tw/3i821Yj\",\n    style: {\n      textDecoration: 'none'\n    }\n  }, \"eToro\"), \".\")))))));\n}","map":null,"metadata":{},"sourceType":"module"}